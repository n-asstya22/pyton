#ZeroDivisionError
#x = 5/0

#TypeError
#x = "–∞" + 15

#IndexError
#x = [0, -15, "–ê–Ω—Ç–æ–Ω"]
#x[3]

#SyntaxError
#x = "–ü—Ä–∏–≤–µ—Ç,—è –ù–∞—Å—Ç—è.

#SyntaxError
# if 5==4
#     print()

#NameError
# x = "–Ø —Å—Ç—Ä–æ—á–∫–∞"
# print(x2)

#assert ---> AssertionError





#try - –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è
#except - –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ –æ—à—Ç–±–æ–∫
#finally - –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
#else - –∏–Ω–∞—á–µ, –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ –±—ã–ª–æ
#pass - "–∑–∞—Ç—ã—á–∫–∞",–Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç
#raise - –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É
#as - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫—É –≤ error_message

# try:
#     number = int(input())
#     x = 5 / number
# except ValueError:
#     print("–•–æ—á—É —Ü–∏—Ñ—Ä—ã")
# except ZeroDivisionError: #–ª—é–±–∞—è –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
#     print("–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω—É–ª—å")
# except Exception:
#     print("–ë–ª–∏–Ω, —Ç—ã –æ—à–∏–±—Å—è, –ø–æ–ª—É—á–∞–µ—Ç—Å—è")
# else: # –∫–æ–≥–¥–∞ –≤—Å–µ —Ö–æ—Ä–æ—à–æü§ó
#     print("–Ø –ø–æ–¥–µ—Ä–∏–ªü¶ß")
# finally:
#     print("–ú–µ–Ω—è –Ω–∞–ø–∏—Å–∞–ª–∞ –ù–∞—Å—Ç—è.–í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.")
#
#
# print("–Ø –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç–∞—Ç—å ")

#PASS
# try:
#     number = int(input())
#     x = 5 / number
# except Exception:
#     pass
# if 5 == 5:
#     pass  #TODO: –¥–æ–ø–∏—Å–∞—Ç—å
#
# try:
#     x = input("–í–≤–µ–¥–∏ –∏–º—è:")
#     if x == "–ê–Ω—Ç–æ–Ω":
#         raise Exception("–ê–Ω—Ç–æ–Ω–∞ –≤ –æ–±–∏–¥—É –Ω–µ –¥–∞–º")
# except Exception as error_message :
#     print()

inst = []
try:
    f = open("text.txt")
except FileNotFoundError:
    print("–ù—É, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å")
else:
    try:
        for line in f:
            inst.append(int(line))
    except ValueError:
        print("–¢—É—Ç –Ω–µ —á–∏—Å–ª–æ")
    else:
        print(inst)
    finally:    #–≤–æ–æ–±—â–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        f.close()
        print("–Ø –∑–∞–∫–æ–Ω—á–∏–ª —Ñ–∞–π–ª")